import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.Map;
import java.util.TreeMap;

public class WordCounter {
    public static void main(String[] args) {

        // Change the file path to the location of your text file

        String filePath = "path/to/your/textfile.txt";

        // Create a TreeMap to store word counts (automatically sorted alphabetically)

        Map<String, Integer> wordCounts = new TreeMap<>();

        try (BufferedReader br = new BufferedReader(new FileReader(filePath))) {
            String line;
            while ((line = br.readLine()) != null) {

                // Split the line into words using whitespace as delimiter

                String[] words = line.split("\\s+");

                // Process each word

                for (String word : words) {

                    // Remove punctuation marks and convert to lowercase

                    word = word.replaceAll("[^a-zA-Z]", "").toLowerCase();

                    // Update word count in the map

                    if (!word.isEmpty()) {
                        wordCounts.put(word, wordCounts.getOrDefault(word, 0) + 1);
                    }
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
        }

        // Display word count for each unique word in alphabetical order

        for (Map.Entry<String, Integer> entry : wordCounts.entrySet()) {
            System.out.println(entry.getKey() + ": " + entry.getValue());
        }
    }
}
